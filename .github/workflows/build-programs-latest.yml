name: Build programs (latest)

on:
  workflow_dispatch:
  schedule:
    - cron: "0 6 * * *"  # every day at 06:00 UTC

jobs:
  build-programs-latest:
    runs-on: ubuntu-latest
    timeout-minutes: 120

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps (root)
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Install deps (scraper_latest)
        run: |
          if [ -f scraper_latest/requirements.txt ]; then pip install -r scraper_latest/requirements.txt; fi

      - name: Crawl latest with heartbeat
        env:
          SCRAPE_CONCURRENCY: 8
        run: |
          set -euo pipefail
          mkdir -p scraper_latest/out
          (
            trap 'kill 0' SIGINT SIGTERM EXIT
            while true; do echo "[heartbeat] crawling still running $(date -u +"%Y-%m-%dT%H:%M:%SZ")"; sleep 60; done &
            python scraper_latest/scripts/crawl_official_latest.py
          )

      - name: Normalize latest with heartbeat
        run: |
          set -euo pipefail
          (
            trap 'kill 0' SIGINT SIGTERM EXIT
            while true; do echo "[heartbeat] normalizing still running $(date -u +"%Y-%m-%dT%H:%M:%SZ")"; sleep 60; done &
            python scraper_latest/scripts/normalize_latest.py
          )

      - name: Show outputs
        run: |
          echo "Listing scraper_latest/out:"
          ls -la scraper_latest/out || true
          if compgen -G "scraper_latest/out/*.csv" > /dev/null; then head -n 5 scraper_latest/out/*.csv || true; fi

      - name: Commit updated data
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          # Add normalized outputs and fallback JSON if your scripts write them in repo root
          git add -A scraper_latest/out || true
          [ -f programs.json ] && git add programs.json || true
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "chore: update latest programs ($(date -u +'%Y-%m-%dT%H:%M:%SZ'))"
            git push
          fi
