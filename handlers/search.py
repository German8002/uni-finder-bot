from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message
from utils.parsers import format_filters_human
from utils.filters import parse_user_input, parse_with_regex, parse_user_input as parse_user_input_async
from services.search import find_programs

router = Router()

@router.message(CommandStart())
async def start(m: Message):
    await m.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É –Ω–∞–π—Ç–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –≤—É–∑—ã üéì\n"
        "–ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞ (–ª—é–±—ã–º —Ç–µ–∫—Å—Ç–æ–º):\n"
        "<b>–û–º—Å–∫ 210 –æ–±—â–µ–∂–∏—Ç–∏–µ –Ω–µ –≤–∞–∂–Ω–æ —Ñ–∏–∑–∏–∫–∞</b>\n"
        "–ö–æ–º–∞–Ω–¥–∞ /help ‚Äî –ø–æ–¥—Å–∫–∞–∑–∫–∏."
    )

@router.message(F.text.regexp(r'(?i)^/help'))
async def help_cmd(m: Message):
    await m.answer(
        "–§–∏–ª—å—Ç—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ —è –ø–æ–Ω–∏–º–∞—é:\n"
        "‚Ä¢ –≥–æ—Ä–æ–¥\n‚Ä¢ –±–∞–ª–ª—ã\n‚Ä¢ –æ–±—â–µ–∂–∏—Ç–∏–µ (–µ—Å—Ç—å/–Ω–µ—Ç/–Ω–µ –≤–∞–∂–Ω–æ)\n"
        "‚Ä¢ —É—Ä–æ–≤–µ–Ω—å (–±–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç/–º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞/–∫–æ–ª–ª–µ–¥–∂)\n‚Ä¢ —ç–∫–∑–∞–º–µ–Ω—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é\n"
        "–ü—Ä–∏–º–µ—Ä: –û–º—Å–∫ 210 –æ–±—â–µ–∂–∏—Ç–∏–µ –Ω–µ –≤–∞–∂–Ω–æ —Ñ–∏–∑–∏–∫–∞"
    )

@router.message(F.text.len() > 0)
async def handle_query(m: Message):
    text = m.text.strip()
    try:
        filters = await parse_user_input_async(text)
    except TypeError:
        filters = parse_with_regex(text)
    await m.answer(f"–ò—â—É: <b>{text}</b>\n–§–∏–ª—å—Ç—Ä—ã: {format_filters_human(filters)}")
    items = await find_programs(filters)
    if not items:
        await m.answer("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à—ë–ª. –ü–æ–ø—Ä–æ–±—É–π –æ—Å–ª–∞–±–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å.")
        return
    for it in items[:6]:
        txt = (f"<b>{it.get('program') or it.get('title','–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}</b>\n"
               f"–í–£–ó: {it.get('university','‚Äî')}\n"
               f"–ì–æ—Ä–æ–¥: {it.get('city','‚Äî')} | –£—Ä–æ–≤–µ–Ω—å: {it.get('level','‚Äî')}\n"
               f"–ú–∏–Ω. –±–∞–ª–ª—ã: {it.get('min_score','‚Äî')} | –û–±—â–µ–∂–∏—Ç–∏–µ: {it.get('dorm','‚Äî')}\n"
               f"–≠–∫–∑–∞–º–µ–Ω—ã: {', '.join(it.get('exams',[])) if it.get('exams') else '‚Äî'}\n"
               f"–°—Å—ã–ª–∫–∞: {it.get('url','‚Äî')}")
        await m.answer(txt)
