
--- a/services/offline_data.py
+++ b/services/offline_data.py
@@
-    DATA_PATH = os.getenv("DATA_JSON_PATH", "data/programs.json")
+    DATA_PATH = os.getenv("DATA_JSON_PATH", "data/programs.json")
     DATA_CSV_URL = os.getenv("DATA_CSV_URL")
-    REFRESH_TTL = int(os.getenv("DATA_REFRESH_TTL_SECONDS", "21600"))  # 6h
-    ADMISSION_YEAR = int(os.getenv("ADMISSION_YEAR", "2024"))
+    REFRESH_TTL = int(os.getenv("DATA_REFRESH_TTL_SECONDS", "21600"))  # 6h
+    ADMISSION_YEAR = os.getenv("ADMISSION_YEAR", "latest")  # "latest" or specific year like "2024"
@@
-    def _load_csv_url(url: str) -> list[dict]:
+    def _load_csv_url(url: str) -> list[dict]:
         try:
             r = requests.get(url, timeout=12)
             r.raise_for_status()
             content = r.content.decode("utf-8", errors="ignore")
             reader = csv.DictReader(io.StringIO(content))
             rows = []
             for row in reader:
                 rows.append({
                     "university": (row.get("university") or row.get("ВУЗ") or "").strip(),
                     "program": (row.get("program") or row.get("направление") or "").strip(),
                     "city": (row.get("city") or row.get("город") or "").strip(),
                     "level": (row.get("level") or row.get("уровень") or "").strip(),
                     "form": (row.get("form") or row.get("форма") or "").strip(),
                     "exams": (row.get("exams") or row.get("экзамены") or "").strip(),
                     "budget": (row.get("budget") or row.get("бюджет") or "").strip(),
                     "score_min": int((row.get("score_min") or row.get("минимальный балл") or "0").strip() or 0),
                     "url": (row.get("url") or row.get("ссылка") or "").strip(),
                     "year": int((row.get("year") or "0").strip() or 0),
                 })
             return rows
         except Exception:
             return []
@@
-    def get_all() -> list[dict]:
+    def get_all() -> list[dict]:
         global _cache
         now = time.time()
         if _cache and (now - _cache[0]) < REFRESH_TTL:
             return _cache[1]
         rows = _load()
-        # если в CSV есть колонка year — фильтруем по ADMISSION_YEAR
-        if any(isinstance(r.get("year"), int) and r["year"] for r in rows):
-            rows = [r for r in rows if int(r.get("year") or 0) == ADMISSION_YEAR]
+        years = [int(r.get("year") or 0) for r in rows if str(r.get("year","")).isdigit()]
+        if years:
+            if str(ADMISSION_YEAR).lower() == "latest":
+                latest = max(years)
+                rows = [r for r in rows if int(r.get("year") or 0) == latest]
+            else:
+                try:
+                    want = int(ADMISSION_YEAR)
+                    rows = [r for r in rows if int(r.get("year") or 0) == want]
+                except Exception:
+                    pass
         _cache = (now, rows)
         return rows
